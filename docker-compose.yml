version: '3.8'
services:
  worker:
    container_name: syncwave-worker
    build: ./worker
    ports:
      - "8000:8000"
    volumes:
      - ./worker/src:/app/src
      - ./worker/node_modules:/app/node_modules
    environment:
      - BEARER_TOKEN=${BEARER_TOKEN}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@syncwave-db:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:?err}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?err}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:?err}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      syncwave-db:
        condition: service_healthy
    networks:
      - syncwave-network
    restart: unless-stopped

  syncwave-db:
    image: mongo:5.0
    container_name: "syncwave-db"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:?err}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:?err}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:?err}
      - MONGODB_ENABLE_AUTHENTICATION=true
    command: ["--auth"]
    volumes:
      - db-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    healthcheck:
      test: >
        mongosh --username $${MONGO_INITDB_ROOT_USERNAME} --password $${MONGO_INITDB_ROOT_PASSWORD}
        --authenticationDatabase admin --eval "db.runCommand('ping').ok" $${MONGO_INITDB_DATABASE}
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - syncwave-network
    restart: always

  mongoku:
    container_name: syncwave-mongoku
    image: huggingface/mongoku
    ports:
      - "3100:3100"
    environment:
      - MONGOKU_DEFAULT_HOST=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@syncwave-db:27017/admin?authSource=admin&replicaSet=rs0
    depends_on:
      syncwave-db:
        condition: service_healthy
    networks:
      - syncwave-network
    restart: unless-stopped

networks:
  syncwave-network:
    driver: bridge

volumes:
  db-data:

